# TODO: Add config.yaml & libyaml (or is it libyaml-dev?) to cmake depndencies.
# TODO: Think of an include\import like mechanism to enable structrured, clean & small hirarchy of config files.
# For example, I could think of exporting the connection structure to a config_network.yml file.
# config_network will support all network protocols & will be imported here.
# Some values might be overwriting using the '<<' syntax.
# Another example would be an config_IPC.yml which supports all inter-process communication.
# config_IPC could decide how many pipes to instantiate & at what direction or between which entities.
# It would laso include shared data structure & will decied it's size etc. Other IPC too...

---
# Default config

#IPv4 Protocol
-
  struct sin_addr: &sin_addr
  - s_addr: INADDR_ANY

-
  struct sockaddr_in: &address
  - sin_family: "AF_INET"
  - sin_port: 8080
  - sin_addr_p: *sin_addr

-
  connection_ctx: &connection
  - sockaddr_in_p: *address
  - send_buff size: 1024 #Bytes
  - recv_buff size: 1024 #Bytes

-
  connect_retry_ctx: &connect_retry
  - retry_cnt: 0
  - retry_sleep_time: 0


#Pipe
-
  pipe_direction: #Constants (Replaces enums or defines.)
  - &parent_to_child 0
  - &child_to_parent 1

-
  pipe_ctx: &pipe
  - direction_p: *parent_to_child


#Node
-
  client_ctx: &client
  - executable: "./client"
  - user_args: ""
  - connection_ctx_p: *connection
  - connect_retry_ctx_p: *connect_retry
  - pipe_ctx_p: *pipe

-
  server_ctx: &server
  - executable: "./server"
  - user_args: ""
  - connection_ctx_p: *connection

-
  node_ctx:
  - client_ctx_p: *client
  - server_ctx_p: *server

---
# User defined config
# TODO: Enable user define their own config.
#       User defined take presedence of default configurations.
# TODO: Support multi-user\multi-app configurations.
#       Each user\app would have it own config which ovverrids the default,
#       Thus enabling more than on app to use this config.yaml file.
# TODO: Consider genertae user configs as seperate yaml files (e.g. yaml.user)
#       I currently not sure it is necessary.
#       Probably would like to support both options:
#       i.e. both same file yaml documents & seperate files for each user\app.

---
# Run-Time config - Auto-Generated.
# TODO: Auto-Generate the *full* runtime configuration used,
#       by taking cmd line args which overrides user defined config,
#       which in turn overrides default config.
#TODO: Consider genertae runtime config as a seperate tmp file (e.g. yaml.runtime)
...